version: '3.9'

services:
  redis:
    image: redis:7
    container_name: labopp_redis
    restart: always
    command: redis-server --requirepass Manheno1
    ports:
      - "6379:6379"
    networks: [labopp_network]

  webapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laboop_api
    restart: always
    ports:
      - "5000:8080"
    environment:
      # Database & Redis
      - ConnectionStrings__DB=Server=172.17.0.1,1433;Database=LabOopChange_v6;User Id=sa;Password=Manheno1;Encrypt=False;TrustServerCertificate=True;
      - ConnectionStrings__Redis=redis:6379,password=Manheno1

      # JWT
      - JwtSettings__Secret=THIS_IS_SUPER_SECRET_KEY_1234567890
      - JwtSettings__Issuer=LabOOPSystem
      - JwtSettings__Audience=LabOOPUsers
      - JwtSettings__ExpireMinutes=60

      # Google OAuth
      - GoogleAuth__ClientId=41594915925-n7hce257v5uk1fcepfa74qv91jeo15ia.apps.googleusercontent.com

      # Docker UID/GID (cho sandbox)
      - Docker__UID=1000
      - Docker__GID=1000

      # AI Services
      - AIServices__RAGServiceUrl=http://rag-service:3001
      - AIServices__AIServiceUrl=http://localhost:3000
      - AIServices__GeminiApiKey=AIzaSyC3Rba5DCRWQUHM6DiBpuWc8sa6eN2Iz-c
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./wwwroot:/app/wwwroot
    user: root
    depends_on:
      - java-sandbox
      - rag-service
    networks: [labopp_network]

  java-sandbox:
    build:
      context: ./LabAssistantOPP_LAO.Services/Interfaces/Grading/grading-system/java-sandbox
      dockerfile: Dockerfile
    container_name: java_sandbox
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./worker_temp:/app/worker_temp
      - ./submissions:/app/submissions
    networks: [labopp_network]

  # ====== RAG INFRASTRUCTURE ======
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    ports:
      - "6333:6333"    # External access for monitoring
      - "6334:6334"    # gRPC port
    volumes:
      - qdrant_data:/qdrant/storage
    networks: [labopp_network]

  ollama:
    image: ollama/ollama:latest
    restart: always
    ports:
      - "11434:11434"  # External access for model management
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    volumes:
      - ollama_data:/root/.ollama
    networks: [labopp_network]

  # ====== RAG SERVICE ======
  rag-service:
    build:
      context: ./rag-cli-nodejs
      dockerfile: Dockerfile
    container_name: labopp_rag_service
    restart: always
    ports:
      - "3001:3001"    # External access for direct testing
    environment:
      # Node.js Configuration
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=2048

      # Service URLs
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_URL=http://ollama:11434

      # Google Gemini Configuration (unified to Gemini 2.5)
      - GEMINI_API_KEY=${GEMINI_API_KEY:-${GOOGLE_API_KEY:-AIzaSyC3Rba5DCRWQUHM6DiBpuWc8sa6eN2Iz-c}}
      - GENAI_MODEL=${GENAI_MODEL:-gemini-2.5-flash}
      - GENAI_MODEL_REVIEW=${GENAI_MODEL_REVIEW:-gemini-2.5-flash}
      - GENAI_BASE=https://generativelanguage.googleapis.com

      # Service Configuration
      - PORT=3001
      - HOST=0.0.0.0
      - CORS_ORIGIN=*

      # Logging
      - LOG_LEVEL=info

      # Timeouts
      - REQUEST_TIMEOUT=120000
      - EMBEDDING_TIMEOUT=30000

      # Rate Limiting
      - RATE_LIMIT_WINDOW=900000  # 15 minutes
      - RATE_LIMIT_MAX_REQUESTS=100

      # Gemini API Rate Limiting & Caching
      - GEMINI_MAX_CONCURRENT=1
      - GEMINI_DELAY_BETWEEN_REQUESTS=2000
      - GEMINI_MAX_RETRIES=3
      - GEMINI_CACHE_TTL=1800000  # 30 minutes (tăng cache để giảm API calls)
    volumes:
      - rag_uploads:/app/uploads
      - rag_logs:/app/logs
    depends_on:
      - qdrant
      - ollama
    networks: [labopp_network]
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

volumes:
  qdrant_data:
    driver: local
  ollama_data:
    driver: local
  rag_uploads:
    driver: local
  rag_logs:
    driver: local

networks:
  labopp_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

