version: '3.8'

services:
  labapi:
    build:
      context: .
      dockerfile: LabAssistantOPP_LAO.WebApi/Dockerfile
    ports:
      - "5111:80"
    depends_on:
      - labdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DB=Server=labdb;Database=LabOpp;User=sa;Password=DoanSU25.2025;Encrypt=False;TrustServerCertificate=True

  labdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: lab_sql
    environment:
      SA_PASSWORD: "DoanSU25.2025"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - lab_sql_data:/var/opt/mssql

  db-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - labdb
    volumes:
      - ./init_labopp.sql:/init_labopp.sql
    entrypoint: >
      /bin/bash -c "
        sleep 20 &&
        /opt/mssql-tools/bin/sqlcmd -S labdb -U sa -P DoanSU25.2025 -d master -i /init_labopp.sql
      "
      
 # ====== PHẦN THÊM (không sửa block trên) ======
  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  # Ollama AI Models
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0

  # RAG Service (Node.js)
  rag-service:
    build:
      context: ./rag-cli-nodejs
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - qdrant
      - ollama
    environment:
      - NODE_ENV=production
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_URL=http://ollama:11434
    volumes:
      - ./rag-cli-nodejs/uploads:/app/uploads

volumes:
  lab_sql_data:
  redis_data:
  qdrant_data:
  ollama_data:
