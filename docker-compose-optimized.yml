version: '3.9'

services:
  webapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laboop_api
    restart: always
    ports:
      - "5000:8080"
    environment:
      # Database & Redis
      - ConnectionStrings__DB=Server=172.17.0.1,1433;Database=LabOopChange_v6;User Id=sa;Password=Manheno1;Encrypt=False;TrustServerCertificate=True;
      - ConnectionStrings__Redis=188.166.212.41:6379,password=Manheno1

      # JWT
      - JwtSettings__Secret=THIS_IS_SUPER_SECRET_KEY_1234567890
      - JwtSettings__Issuer=LabOOPSystem
      - JwtSettings__Audience=LabOOPUsers
      - JwtSettings__ExpireMinutes=60

      # Google OAuth
      - GoogleAuth__ClientId=41594915925-n7hce257v5uk1fcepfa74qv91jeo15ia.apps.googleusercontent.com

      # Docker UID/GID (cho sandbox)
      - Docker__UID=1000
      - Docker__GID=1000

      # AI Services
      - AIServices__RAGServiceUrl=http://rag-service:3001
      - AIServices__AIServiceUrl=http://localhost:3000
      - AIServices__GeminiApiKey=${GOOGLE_API_KEY:-AIzaSyDxFNK8N6Y9bkLkNwhoENVhq-gNHH3UrnY}

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock   

    user: root    

    depends_on:
      - java-sandbox
      - rag-service

  java-sandbox:
    build:
      context: ./LabAssistantOPP_LAO.Services/Interfaces/Grading/grading-system/java-sandbox
      dockerfile: Dockerfile
    container_name: java_sandbox
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./worker_temp:/app/worker_temp
      - ./submissions:/app/submissions

  # ====== RAG INFRASTRUCTURE ======
  qdrant:
    image: qdrant/qdrant:1.9.0
    container_name: labopp_qdrant
    restart: always
    ports:
      - "6333:6333"    # External access for monitoring
      - "6334:6334"    # gRPC port
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__SERVICE__ENABLE_TLS=false
      - QDRANT__SERVICE__CORS_ALLOW_ORIGINS=["*"]
      # Performance optimizations
      - QDRANT__SERVICE__ENABLE_TLS=false
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
      - QDRANT__STORAGE__PERFORMANCE__MAX_SEARCH_THREADS=4
      - QDRANT__STORAGE__PERFORMANCE__MAX_INDEXING_THREADS=4
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:6333/collections"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - labopp_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # ====== RAG SERVICE ======
  rag-service:
    build:
      context: ./rag-cli-nodejs
      dockerfile: Dockerfile
    container_name: labopp_rag_service
    restart: always
    ports:
      - "3001:3001"    # External access for direct testing
    environment:
      # Node.js Configuration
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=2048
      
      # Service URLs
      - QDRANT_URL=http://qdrant:6333
      
      # Google Gemini Configuration
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-AIzaSyDxFNK8N6Y9bkLkNwhoENVhq-gNHH3UrnY}
      - GENAI_MODEL=${GENAI_MODEL:-gemini-1.5-pro-002}
      - GENAI_BASE=https://generativelanguage.googleapis.com
      
      # Embeddings Configuration
      - EMBEDDINGS_PROVIDER=${EMBEDDINGS_PROVIDER:-gemini}
      - EMBEDDINGS_MODEL=${EMBEDDINGS_MODEL:-text-embedding-004}
      
      # Service Configuration
      - PORT=3001
      - HOST=0.0.0.0
      - CORS_ORIGIN=*
      
      # Logging
      - LOG_LEVEL=info
      
      # Timeouts
      - REQUEST_TIMEOUT=120000
      - EMBEDDING_TIMEOUT=30000
      
      # Rate Limiting
      - RATE_LIMIT_WINDOW=900000  # 15 minutes
      - RATE_LIMIT_MAX_REQUESTS=100
      
    volumes:
      - rag_uploads:/app/uploads
      - rag_logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3001/health >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    depends_on:
      qdrant:
        condition: service_healthy
    networks:
      - labopp_network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

volumes:
  qdrant_data:
    driver: local
  rag_uploads:
    driver: local
  rag_logs:
    driver: local

networks:
  labopp_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
